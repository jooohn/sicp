(define (smallest-divisor n) (find-divisor n 2))
(define (find-divisor n test-divisor)
    (cond   ((> (square test-divisor) n) n)
            ((divides? test-divisor n) test-divisor)
            (else (find-divisor n (+ test-divisor 1)))))
(define (divides? a b) (= (remainder b a) 0))
(define (prime? n) (= n (smallest-divisor n)))
(define (timed-prime-test n)
    (newline)
    (display n)
    (start-prime-test n (runtime)))
(define (start-prime-test n start-time)
    (if (fast-prime? n 100)
        (report-prime (- (runtime) start-time))))
(define (report-prime elapsed-time)
    (display " *** ")
    (display elapsed-time))
(define (search-for-prime from to)
    (cond   ((> from to) 0)
            ((divides? 2 from) (search-for-prime (+ from 1) to))
            (else   (timed-prime-test from)
                    (search-for-prime (+ from 2) to))))
(define (expmod base exp m)
    (cond   ((= exp 0) 1)
            ((even? exp)
                  (remainder (square (expmod base (/ exp 2) m)) m))
            (else (remainder (* base (expmod base (- exp 1) m)) m))))
(define (fermat-test n)
    (define (try-it a)
        (= (expmod a n n) a))
    (try-it (+ 1 (random (- n 1)))))
(define (fast-prime? n times)
    (cond ((= times 0) true)
    ((fermat-test n) (fast-prime? n (- times 1)))
    (else false)))

早すぎてわからん

2 error> (timed-prime-test 10000000000037)
10000000000037 *** 1.0000000000005116e-2)

2 error> (timed-prime-test 100000000000097)
100000000000097 *** 1.0000000000005116e-2)

1049 *** 1.0000000000005116e-2
1000037 *** 9.999999999990905e-3
